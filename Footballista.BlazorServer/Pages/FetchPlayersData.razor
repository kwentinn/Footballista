@page "/fetchplayersdata"

@using Footballista.BlazorServer.Data
@using Footballista.BlazorServer.Data.Players
@inject PlayersService playerService

<h1>Generated players</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (players == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<MatButton>Enregistrer joueurs</MatButton>
	<MatButton>Charger joueurs</MatButton>

	<table class="table">
		<thead>
			<tr>
				<th>Firstname</th>
				<th>Lastname</th>
				<th>Nationalities</th>
				<th>Gender</th>
				<th>Foot</th>
				<th>Dob</th>
				<th>Place of birth</th>
				<th>Height (cm)</th>
				<th>Weight (kg)</th>
				<th>Rating</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var player in players)
			{
				<tr>
					<td>@player.Firstname</td>
					<td>@player.Lastname</td>
					<td>@GetNationalities(player.Nationalities)</td>
					<td>@player.Gender</td>
					<td>@player.Foot</td>
					<td>@player.BirthInfo.DateOfBirth</td>
					<td>@player.BirthInfo.City.Name, @player.BirthInfo.City.Country</td>
					<td>@player.Bmi.HeightInCentimeters</td>
					<td>@player.Bmi.WeightInKilograms</td>
					<td>@player.GeneralRating</td>
				</tr>
				@*<tr colspan="10">
					@foreach (var rating in @player.Ratings)
					{
						@rating.Feature
						@rating.Value
					}
				</tr>*@
			}
		</tbody>
	</table>
}

@code {
	private Data.Players.Player[] players;

	protected override async Task OnInitializedAsync()
	{
		players = await playerService.GetPlayersAsync();
	}
	protected string GetNationalities(List<string> nationalities)
		=> string.Join(", ", nationalities);
}
